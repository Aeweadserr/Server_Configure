#将nginx进程设置为普通用户，为了安全考虑
user www-data;

#当前启动的worker进程，官方建议是与系统核心数一致
worker_processes auto;

#方式一，就是自动分配绑定
worker_cpu_affinity auto;

#日志配置成warn
error_log /var/log/nginx/error.log warn; 
pid /var/run/nginx.pid;

include /etc/nginx/modules-enabled/*.conf;

# nginx 进程打开文件描述符数目，此值覆盖 ulimit -n 的值。
worker_rlimit_nofile 65535;

#事件模型
events {
    #使用epoll内核模型
    use epoll;
    #每一个进程可以处理多少个连接，如果是多核可以将连接数调高 worker_processes * 1024
    worker_connections 10240;
}

http {


#在所有地方隐藏nginx的版本信息
	server_tokens off;

# Session Ticket
# 可以配置多个密钥，这样做的目的是为了定期更换密钥，保证前向安全性。
# 将更换的密钥配置在上面，Nginx会优先采用上面的密钥进行加/解密，
# 若使用旧密钥加密的会话，上面的密钥解密不了，就使用后面的密钥进行解密。
	ssl_session_tickets on;

#启用 SSL Session 缓存可以减少 TLS 的反复验证，减少 TLS 握手。 1M 的内存就可以缓存 4000 个连接，非常划算，现在内存便宜，尽量开启.
	ssl_session_cache shared:SSL:50m; # 1m 4000个，
	ssl_session_timeout 1d; # 1小时过期 1 hour during which sessions can be re-used.

# ssl证书位置		
	ssl_certificate      /etc/nginx/cert_file/fullchain.pem;
	ssl_certificate_key  /etc/nginx/cert_file/key.pem;

# TLS使用的版本	
	ssl_protocols TLSv1.2 TLSv1.3;
		
# ssl_buffer_size 控制在发送数据时的 buffer 大小，默认情况下，缓冲区设置为16k，为了最大程度地减少TTFB（至第一个字节的时间），最好使用较小的值，这样TTFB可以节省大约30 – 50ms。
	ssl_buffer_size 4k;

# ECC椭圆曲线，不设置Nginx根据OpenSSL选择	
	ssl_ecdh_curve X25519:P-256:P-384;	
		
# 更新更快的 Cipher放前面，这样延迟更小	
	ssl_prefer_server_ciphers on;
	ssl_ciphers "TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13-AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CHACHA20:EECDH+CHACHA20-draft:EECDH+ECDSA+AES128:EECDH+aRSA+AES128:RSA+AES128:EECDH+ECDSA+AES256:EECDH+aRSA+AES256:RSA+AES256:EECDH+ECDSA+3DES:EECDH+aRSA+3DES:RSA+3DES:!MD5";

	quic_retry on;
	quic_gso on;
	quic_mtu 65527;
	quic_active_connection_id_limit 2;
#	quic_timeout 60s;
#	quic_stream_buffer_size 64k;
	http3_stream_buffer_size 64k;
	http3_max_concurrent_pushes 10;	
	http3_max_concurrent_streams 128;	
	http3_push_preload on;	
	http3 on;
	
# 指令开启 0-RTT的支持。TLS1.3新特性
	ssl_early_data on;
# 添加 Early-Data 头告知后端, 防止重放攻击
	proxy_set_header Early-Data $ssl_early_data;	

# OCSP stapling
	ssl_stapling off;
	ssl_stapling_verify off;

# replace with the IP address of your resolver
	 resolver 119.29.29.29 valid=60s;
# resolver_timeout表示网络超时时间	
	 resolver_timeout 2s;

#采用HSTS协议的网站将保证浏览器始终连接到该网站的HTTPS加密版本，不需要用户手动在URL地址栏中输入加密地址。
	add_header Strict-Transport-Security max-age=31536000;	
#HTTP/3 开启
	add_header Alt-Svc 'h3=":443"; ma=86400, h3-29=":443"; ma=86400';
 # quic=":443"; h3-27=":443"; h3-25=":443";  h3-T050=":443"; h3-Q050=":443";h3-Q049=":443";h3-Q048=":443"; h3-Q046=":443"; h3-Q043=":443"; h4-Q046=":443"
	                     

     fastcgi_param HTTPS on;
     fastcgi_param HTTP_SCHEME https;



###########################################  AList    #########################################################
#server全局块
 
server {
		listen      80 ;   
		listen [::]:80;  #监听端口
		
		server_name www.oolongcha.top default_server; #网站域名
		
		if ( $host != "www.oolongcha.top" ) {
			return 403;
			}
		return 301 https://$server_name$request_uri; #进行URL重写,将http访问重写至https
#		keepalive_timeout   70;     
	}


server { 

		listen 443 ssl http2 fastopen=256 reuseport;        
		listen [::]:443 ssl http2 fastopen=256 reuseport;        
#HTTP/3的支持			
		listen 443 quic reuseport;        
		listen [::]:443 quic reuseport;
				
		server_name www.oolongcha.top ;
 
	location / {
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header Host $http_host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header Range $http_range;
			proxy_set_header If-Range $http_if_range;
			proxy_redirect off;
			proxy_pass http://127.0.0.1:5244;
  			# the max size of file to upload
			client_max_body_size 20000m;
		}

}

###########################################  QingLong    #########################################################

server {
		listen      80;   
		listen [::]:80;  #监听端口
		server_name ql.oolongcha.top; #网站域名
		if ( $host != "ql.oolongcha.top" ) {
			return 403;
			}
		return 301 https://$server_name$request_uri; #进行URL重写,将http访问重写至https
#		keepalive_timeout   70;     
	}
	
server { #server全局块

		listen 443 ssl http2;
		listen [::]:443 ssl http2;
#HTTP/3的支持	
		listen 443 quic;
		listen [::]:443 quic;
		
		server_name ql.oolongcha.top; #解析到服务器IP的域名

	location / {
			proxy_pass http://127.0.0.1:5700;
			proxy_redirect          http:// https://;               # 这个配置
			proxy_set_header        X-Real-IP $remote_addr;
			proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header        X-Forwarded-Proto $scheme;      # 这个配置
			client_max_body_size    1000m;
			client_body_buffer_size 128k;
			proxy_connect_timeout   5;
			proxy_send_timeout      10;
			proxy_read_timeout      10;
			proxy_buffer_size       4k;
			proxy_buffers           4 32k;
			proxy_busy_buffers_size 64k;
			proxy_temp_file_write_size 64k;
	}


}



###########################################  portainer   #########################################################
server {
		listen      80;   
		listen [::]:80;  #监听端口
		server_name portainer.oolongcha.top; #网站域名
		if ( $host != "portainer.oolongcha.top" ) {
			return 403;
			}
		return 301 https://$server_name$request_uri; #进行URL重写,将http访问重写至https
#		keepalive_timeout   70;     
	}
	
server { #server全局块

		listen 443 ssl http2;
		listen [::]:443 ssl http2;
#HTTP/3的支持	
		listen 443 quic;
		listen [::]:443 quic;
				
		server_name portainer.oolongcha.top; #解析到服务器IP的域名
	
		location / {
				proxy_pass https://localhost:9443;
				proxy_redirect          http:// https://;               # 这个配置
				proxy_set_header        X-Real-IP $remote_addr;
				proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_set_header        X-Forwarded-Proto $scheme;      # 这个配置
				client_max_body_size    10m;
				client_body_buffer_size 128k;
				proxy_connect_timeout   5;
				proxy_send_timeout      10;
				proxy_read_timeout      10;
				proxy_buffer_size       4k;
				proxy_buffers           4 32k;
				proxy_busy_buffers_size 64k;
				proxy_temp_file_write_size 64k;
		}

}


##############################################################################################################################




########################################################## dns ###############################################################
server { #server全局块
		keepalive_timeout   70;  
		listen 443 ssl http2;        
		listen [::]:443 ssl http2;        
#HTTP/3的支持			
		listen 443 quic;        
		listen [::]:443 quic;
        
		server_name  dns.oolongcha.top; #解析到服务器IP的域名

		location /dns-query {
				proxy_redirect off;
				#  proxy_http_version 1.1;
				proxy_set_header Host $http_host;
				# show real IP
				proxy_set_header X-Real-IP $remote_addr;
				proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
				proxy_pass http://127.0.0.1:9053/dns-query;
		}
  
}


#################################################################################################################################
server { #server全局块
		keepalive_timeout   70;  
		listen 443 ssl http2;        
		listen [::]:443 ssl http2;        
#HTTP/3的支持			
		listen 443 quic;        
		listen [::]:443 quic;
        
		server_name  doo.oolongcha.top; #解析到服务器IP的域名

		location /dnsyy {
    				set_real_ip_from 0.0.0.0/0;
    				real_ip_header X-Forwarded-For;
				proxy_pass http://127.0.0.1:9953/dns-query;
		}
  
}
###########################################  prometheus   #######################################################################
map $http_upgrade $connection_upgrade {
  								default upgrade;
  								'' close;
}

upstream grafana {
  				server localhost:3000;
}


server {
     	listen      80;   
     	listen [::]:80;  #监听端口
     	
     	server_name grafana.oolongcha.top; #网站域名
     	
          if ( $host != "grafana.oolongcha.top" ) {
			return 403;
		}     
     	return 301 https://$server_name$request_uri; #进行URL重写,将http访问重写至https
#		keepalive_timeout   70;     
	}
	
 server { #server全局块
        
		listen 443 ssl http2;
		listen [::]:443 ssl http2;
#HTTP/3的支持		
		listen 443 quic;
		listen [::]:443 quic;        
		
		server_name grafana.oolongcha.top; #解析到服务器IP的域名

		location / {
				rewrite  ^/grafana/(.*)  /$1 break;
				#proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection $connection_upgrade;
				proxy_set_header Host grafana.oolongcha.top;
				proxy_pass http://localhost:3000;
		}
		  
# Proxy Grafana Live WebSocket connections.
		location /api/live {
				#proxy_http_version 1.1;
				proxy_set_header Upgrade $http_upgrade;
				proxy_set_header Connection "Upgrade";
				proxy_set_header Host grafana.oolongcha.top;
				proxy_pass http://localhost:3000/;
		}

}
################################################################################################################

# Basic Settings
	##
     # 设置为非零值时，可限制单个 sendfile() 调用时传输的数据量。如果没有限制，一个快速 连接可能会完全占用工作进程。
	sendfile on;
	sendfile_max_chunk 5m;
	tcp_nopush on;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;


	include /etc/nginx/mime.types;
	default_type application/octet-stream;
     charset utf-8;  #设置字符集
	##
	# SSL Settings
	##
	#ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
	#ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##
    #设置日志输出格式，根据自己的情况设置
     log_format  main  '$http_user_agent' '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" '
                      '"$args" "$request_uri"';
	access_log /var/log/nginx/access.log;
	#error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
}


#mail {
#	# See sample authentication script at:
#	# http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
#
#	# auth_http localhost/auth.php;
#	# pop3_capabilities "TOP" "USER";
#	# imap_capabilities "IMAP4rev1" "UIDPLUS";
#
#	server {
#		listen     localhost:110;
#		protocol   pop3;
#		proxy      on;
#	}
#
#	server {
#		listen     localhost:143;
#		protocol   imap;
#		proxy      on;
#	}
#}

#}
